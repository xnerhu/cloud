name: CI/CD

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BAZELISK_CACHE_VERSION: 1
      BAZEL_CACHE_VERSION: 2

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - uses: actions/cache@v2.1.6
        id: yarn-cache
        with:
          path: |
            node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile
        env:
          ADBLOCK: true

      # - name: Restore Eslint Cache
      #   uses: actions/cache@v2.1.6
      #   id: eslint-cache
      #   with:
      #     path: |
      #       .eslintcache
      #     key: ${{ runner.os }}-eslint-${{ hashFiles('**/.eslintcache') }}
      #     restore-keys: |
      #       ${{ runner.os }}-eslint-

      - name: Lint
        run: yarn lint

      - name: Restore Bazelisk cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/bazelisk
          key: ${{ runner.os }}-bazelisk-${{ env.BAZELISK_CACHE_VERSION }}-${{ hashFiles('tools/bazel_deps.bzl') }}
          restore-keys: |
            ${{ runner.os }}-bazelisk-${{ env.BAZELISK_CACHE_VERSION }}-

      - name: Restore Bazel cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ env.BAZEL_CACHE_VERSION }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-bazel-${{ env.BAZEL_CACHE_VERSION }}-

      - name: Setup Bazel config
        run: |
          cat .bazelrc.ci >> .bazelrc

      # - name: Build
      #   run: yarn build

      # - name: Pull docker
      #   run: docker-compose pull t

      # - name: Start docker
      #   run: docker-compose up --build -d
      #

      - name: Test
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          yarn bazel test --workspace_status_command=rules/get_workspace_status.sh //common/utils:test

      # - name: Find coverages
      #   run: |
      #     ls ~/.cache/bazel/_bazel_runner/*/sandbox/linux-sandbox/*/execroot/init/bazel-out/k8-fastbuild/bin/common/utils/test.sh.runfiles/init/common/utils

# test.sh.runfiles/init/common/utils
# --test_env=CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }} --test_env=GITHUB_REF=${{ github.ref }} --test_env=GITHUB_RUN_ID=${{ github.run_id }} --test_env=GITHUB_SHA=${{ github.sha }} --test_env=GITHUB_REPOSITORY=${{ github.repository }}
